% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/retro.R
\name{run_retro}
\alias{run_retro}
\title{Run a retrospective analysis (peeling) for an RTMB stock assessment model.}
\usage{
run_retro(
  rpt,
  data,
  pars,
  model,
  n_peels = 10,
  year,
  folder,
  subfolder = NULL,
  quantities = c("spawn_bio", "tot_bio", "recruits"),
  map = list(sigmaR = factor(NA)),
  control = list(iter.max = 1e+05, eval.max = 20000),
  save_outputs = TRUE
)
}
\arguments{
\item{rpt}{The output list from the `run_model()` function for the
full dataset. Must contain `obj` (from RTMB::MakeADFun) and `rpt` (the report)}

\item{n_peels}{The number of retrospective peels to perform (integer)}

\item{year}{The assessment year, used for constructing file paths (e.g., 2024)}

\item{folder}{The folder name for the model or type (e.g., "mgmt", "research"), used for file paths (e.g., "mgmt")}

\item{subfolder}{used for file paths (e.g., "m24"), default: NULL}

\item{quantities}{A character vector of variable names from the model report
to analyze (e.g., c("spawn_bio", "tot_bio", "recruits"))}

\item{map}{A named list specifying the mapping for `RTMB::MakeADFun`}

\item{control}{A list of control parameters for the `nlminb` optimizer}

\item{save_outputs}{A logical flag. If TRUE, saves the retrospective results
(.RDS) and plots (.png) to a 'retro' subfolder}
}
\value{
A list containing three elements:
  1. `retro_data`: A tidy data frame with all estimates from all peels.
  2. `rho_metrics`: A data frame with Mohn's rho and MAE for each quantity.
  3. `plots`: A named list of the generated ggplot objects.
}
\description{
This function automates the process of retrospective analysis. It iteratively
removes recent years of data, refits the model, calculates Mohn's rho,
and generates diagnostic plots for specified quantities of interest.
}
\details{
The function relies on the following packages: `RTMB`, `dplyr`, `purrr`,
`ggplot2`, `patchwork`, `scico`, `tibble`, and `here`. Ensure they are installed.
The Mohn's rho is calculated as the mean of `(Peel_terminal - Base_terminal) / Base_terminal`.
}
